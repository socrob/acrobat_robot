<?xml version="1.0"?>
<launch>

  <!-- the robot gazebo plugin that you want (custom plugin or ros control) -->
  <arg name="robot_config" default="acrobat_custom_gazebo_plugin" /> <!-- alternative possible value: acrobat_custom_gazebo_plugin -->
  
  <!-- pause gazebo physics at startup -->
  <arg name="paused" default="false" />

  <!-- generate a clock (needed for simulated robots) -->
  <arg name="use_sim_time" default="true" />

  <!-- visualize gazebo world in gui interface (consumes more resources) -->
  <arg name="gui" default="false" />

  <!-- log level -->
  <arg name="debug" default="false" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="world_name" value="$(find acrobat_gazebo)/worlds/acrobat.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="false" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find acrobat_description)/urdf/$(arg robot_config).urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
        args="-urdf -model acrobat -param robot_description" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node pkg="robot_state_publisher" type="robot_state_publisher"
        name="robot_state_publisher" output="screen" />

  <!-- tf echo between goal_link and link3, then publish euclidean distance -->
  <node pkg="acrobat_reward_calculation" type="tf_euclidean_distance"
        name="tf_euclidean_distance_node" output="screen" >
    <param name="target_frame_id" value="goal_link" />
    <param name="reference_frame_id" value="link3" />
  </node>

</launch>
